#!/usr/bin/env python

import re
import subprocess
import sqlite3

db = "words.sqlite3"
files = [
    'concept.tex',
    'conclusion.tex',
    'implementation.tex',
    'introduction.tex',
    'outlook.tex',
    'requirements.tex',
    'state.tex',
    'validation.tex',
    ]
reg = re.compile(r'(^\s+[0-9]+\+[0-9]+\+[0-9]+)(.*)(\s[a-z]+\.tex$)')

def get_wordcounts():
    command = ['texcount', '-utf8', '-total']
    command.extend(files)
    lines = subprocess.check_output(command).decode('utf8').split('\n')
    counts = {}
    for l in lines:
        m = reg.match(l)
        if m:
            count = int(m.groups()[0].strip().split('+')[0])
            tex = m.groups()[2].strip().split('.')[0]
            counts.update({tex: count})
        if l.startswith('Words in text'):
            counts.update({'total': int(l.split()[-1])})
    return counts

def log_wordcounts(con):
    counts = get_wordcounts()
    filecols = " ".join(["{} int,".format(f) for f in files])
    countcols = ",".join([str(counts[f.split(".")[0]]) for f in files])
    with con:
        con.execute("create table if not exists Words (date datetime, {})".format(filecols))
        con.execute("insert into Words values (datetime(), {})".format(countcols))

if __name__ == '__main__':
    print(get_wordcounts())
    con = sqlite3.connect(db)
    log_wordcounts(con)
    con.close()
    subprocess.call(["git", "add", db])
